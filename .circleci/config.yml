version: 2.1

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  # job to create infra in aws (cloudformation stack) using the template file
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1

  # job to install ansible and run it in aws already-created ec2
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              fingerprints: ["29:32:fd:ad:67:87:b7:5f:29:17:6d:28:94:0b:b1:c3"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main.yml

  # job to perform smoke test on website response
  # Exercise: Smoke Testing
  smoke_test:
  docker:
    - image: alpine:latest
  steps:
    - run:
        name: Test job
        # Fail the job intentionally to simulate an error.
        command:  return 1
    - destroy_environment  
  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run:
  #         name: smoke test
  #         command: |
  #           URL="https://blog.udacity.com/"
  #           # Test if website exists
  #           if curl -s --head ${URL} 
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi

workflows:
  myWorkflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test